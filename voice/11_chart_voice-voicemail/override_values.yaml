## Global voicemail image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry and imagePullSecrets
##

serviceAccount:
  create: true
  ## The name of the ServiceAccount to use.
  name: "voice-voicemail"

## Primary App Configuration
deployment:
  type: deployment
  replicaCount: 1
  maxReplicas: 5
  postfix:
  strategy: RollingUpdate
  namespace: ${NS}
  upstreamServices: voice-config:9100

image:
  registry: $IMAGE_REGISTRY
  repository: voice/voicemail_node
  pullPolicy: IfNotPresent
  imagePullSecrets: "pullsecret"

##PVCs defined
## PVC is required for Voicemail only when storageInterface=FileSystem
## Note: Voicemail requires seperate storage class do not use the storage class of voice for more info check https://intranet.genesys.com/display/MIC/24.2+Deployment+of+Voicemail+Service
volumes:
  pvcOne:
    create: false                   #we create PVC manually
    mountPath: /opt/genesys/katana/voicemail/storage/
    claim: voice-voicemail-pvc
    # Check the sizing guide and evaluate the size available in the above document
    claimSize: 3Gi                  #disregard, we create PVC manually
    storageClass: voice-voicemail   #disregard, we create PVC manually

## Voicemail is accessed by GVP, GWS, WWE and AgentSetup with the below service
service:
  enabled: true
  type: ClusterIP
  port: 8081
  protocol: TCP
  clusterIP: None # <-- This is needed for creating headless service

## ConfigMaps with Configuration
## Use Config Map for creating environment variables
context:
  # Could create a config map to store settings which can be used to pass in non-sensitive config data as Environment variables
  create: true
  configname: "voice-voicemail-configmap"
  envs:
    # Application Configuration
    port: 8081
    loggingLevel: DEBUG # Logging enable and log level set
    storageInterface: FileSystem
    gwsBaseUrl: https://gws.${DOMAIN}/auth/v3
    deploymentEnvironment: dev
    currentRegion: westus2
    voicemailHome: None

    nodeOptions:
      maxOldSpaceSize: 8192

    redis:
      port: 6379
      isCluster: true

    consul:
      secure: true
      port: 8501
      serviceCheck:
        enabled: true
        checkInterval: "10s"
        checkTimeout: "1s"
        deregisterTimeout: "1m"

## Tenants List - For multi-tenant architecture the tenants list is mounted as volume to dynamically onboard when a new tenant is created
## Config Map created outside of helm chart - In Azure created from Terraform, For PE, if we are using BlobStorage as StorageInterface then we need to created the tenant lists as a configmap
tenants:
  mounts:
  - name: voicemail-tenants
    readOnly: true
    mountPath: /opt/genesys/katana/voicemail/tenants
  volumes:
  - name: voicemail-tenants
    configMap:
      name: voice-voicemail-tenants-list

## Default secrets storage to k8s secrets with csi able to be optional
secrets:
  consulACL:
    general:
      mode: 'k8s | csi'
      enabled: true
      secretName: "/opt/genesys/consul-shared-secret/consul-consul-voice-token"
    mounts:
    - name: consul-shared-secret
      readOnly: true
      mountPath: "/opt/genesys/consul-shared-secret"
    volumes:
    - name: consul-shared-secret
      secret:
        secretName: consul-voice-token

  redisTenantStream:
    general:
      mode: 'k8s | csi'
      enabled: true
      secretName: "/opt/genesys/redis-tenant-secret/redis-tenant-stream"
    mounts:
      - name: redis-tenant-stream-secret
        readOnly: true
        mountPath: "/opt/genesys/redis-tenant-secret"
    volumes:
      - name: redis-tenant-stream-secret
        secret:
          secretName: redis-tenant-token

  blobStorage:
    general:
      mode: 'k8s | csi'
      enabled: false
    mounts:
      - name: voicemail-secrets
        readOnly: true
        mountPath: "/opt/genesys/katana/voicemail/secret"
    volumes:
      - name: voicemail-secrets
        secret:
          secretName: voicemail-secrets

  voicemailRedisStream:
    general:
      mode: 'k8s | csi'
      enabled: false
    mounts:
      - name: voicemail-redis-secrets
        readOnly: true
        mountPath: "/opt/genesys/katana/voicemail/redis"
    volumes:
      - name: voicemail-redis-secrets
        secret:
          secretName: voice-voicemail-redis-secrets

# For Single box deployment, resources given below should be commented
resources:
  requests:
    cpu: "250m"
    memory: "256Mi"
  limits:
    cpu: "500m"
    memory: "512Mi"

# To be enabled when email notification is required
smtp:
  enabled: false
  allowed: allowed

## Containers should run as genesys user and cannot use elevated permissions
securityContext:
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 500
  runAsGroup: 500

prometheus:
  # Enable for Prometheus Annotation
  metricServer:
    enabled: false
    path: /metrics

  # Enable for Prometheus operator
  podMonitor:
    enabled: false
    path: /metrics
    interval: 30s
    scrapeTimeout:

podSecurityContext: {}

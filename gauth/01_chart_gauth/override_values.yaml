# Docker image configuration
image:
  registry: $IMAGE_REGISTRY/auth
  # Configure imagePullSecrets if docker registry requires authentication
  # https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/#registry-secret-existing-credentials
  imagePullSecrets:
    - name: pullsecret
  pullPolicy: IfNotPresent
COLOR: blue
postgres:
  deploy: false
  secret:
    name_override:
    create: true
  configmap:
    name_override:
    create: true
  image: postgres:11-alpine
  # REQUIRED FIELDS:
  username: gauth_pg_username
  password: gauth_pg_password
  db: gauth
  host: POSTGRES_ADDR
  port: 5432

redis:
  deploy: false
  secret:
    name_override: gauth-redis
    create: true
  configmap:
    name_override:
    create: true
  image: redis:5-stretch
  cluster_nodes: infra-redis-redis-cluster-headless.infra.svc.cluster.local:6379
  use_tls: false
  # REDIS AUTH
  password_required: true
  password: gauth_redis_password

services:
  secrets:
    useSecretProviderClass: false
    aadpodidbinding: gauth-identity
    secretProviderClassNames:
      jks_keyvault: keyvault-gauth-jks-keyvault
      jks_credentials: keyvault-gauth-jks-credentials
      admin_user: keyvault-gauth-admin-user
      pg_user: keyvault-gauth-pg-user
      redis_password: keyvault-gauth-redis-password
      client_credentials: keyvault-gauth-client-credentials
      consul_token: keyvault-consul-consul-gauth-token
  # Number of pod replicas, recommended to be N+1
  replicas: 2
  location: /USW1
  db:
    init: true
    poolSize: 3
    poolCheckoutTimeout: 3000
    ssl: disable
  secret:
    name_override:
    create: true
    # REQUIRED FIELDS:
    admin_username: gauth_admin_username
    admin_password: gauth_admin_password
    client_id: gauth_gws_client_id
    client_secret: gauth_gws_client_secret

  auth_ui:
    # Pod resources requests and limits
    resources:
      limits:
        cpu: 100m
        memory: 1Gi
      requests:
        cpu: 100m
        memory: 512Mi

  auth:
    jks:
      enabled: true
      sso:
        enabled: true
      secret:
        create: true

      # Convert keystore.jks file content to base64 ( cat keystore.jks | base64 ) and put the output here
      keyStore: jksStorage.jks

      keyStoreFileData: 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
      # Keystore password
      keyStorePassword: gauth_jks_keyStorePassword
      # SSL key alias
      keyAlias: gws-auth-key
      # SSL key password
      keyPassword: gauth_jks_keyPassword
    # Number of pod replicas, recommended to be N+1, defaults to services.replica if empty
    replicas:
    # Pod resources requests and limits
    resources:
      requests:
        cpu: 200m
        memory: 1Gi
      limits:
        cpu: 200m
        memory: 2Gi
    # readiness probe.
    # To disable readinessProbe - set readinessProbe: {}
    readinessProbe:
      httpGet:
        path: /health
        port: management
      initialDelaySeconds: 30
      timeoutSeconds: 3
      periodSeconds: 10
    # liveness probe
    # To disable livenessProbe - set livenessProbe: {}
    livenessProbe:
      httpGet:
        path: /health
        port: management
      initialDelaySeconds: 120
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 3
      failureThreshold: 3

  environment:
    # Number of pod replicas, recommended to be N+1, defaults to services.replica if empty
    replicas:
    force_writable: true
    # Pod resources requests and limits
    resources:
      requests:
        cpu: 200m
        memory: 1Gi
      limits:
        cpu: 200m
        memory: 1Gi
    # readiness probe.
    # To disable readinessProbe - set readinessProbe: {}
    readinessProbe:
      httpGet:
        path: /health
        port: management
      initialDelaySeconds: 30
      timeoutSeconds: 3
      periodSeconds: 10
    # liveness probe
    # To disable livenessProbe - set livenessProbe: {}
    livenessProbe:
      httpGet:
        path: /health
        port: management
      initialDelaySeconds: 120
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 3
      failureThreshold: 3

# Optional Deployment/ReplicaSet parameters
optional:
  # https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass
  priorityClassName: ''
  #  https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  securityContext: {}

  #  https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  nodeSelector: {}
  #  https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                gauth: '{{ .gauth }}'
                app.kubernetes.io/name: '{{ include "auth.name" . }}'
                app.kubernetes.io/instance: '{{ .Release.Name }}'
            topologyKey: failure-domain.beta.kubernetes.io/zone
          weight: 100

# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 10
      maxUnavailable: 0


# Ingress config
# tps://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  # Host that will be used by ingress.
  # Applies to all inbound traffic through the host specified
  frontend: gauth.${DOMAIN}
  annotations:
    # Default annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
  # HTTPS configuration
  tls_enabled: true
  tls:
    - hosts:
        - gauth.${DOMAIN}
      secretName: letsencrypt


# Internal  config
# tps://kubernetes.io/docs/concepts/services-networking/ingress/
internal_ingress:
  enabled: true
  # Host that will be used by ingress.
  # Applies to all inbound traffic through the host specified
  frontend: gauth-int.${DOMAIN}
  annotations:
    # Default annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
  # HTTPS configuration
  tls_enabled: true
  tls:
    - hosts:
        - gauth-int.${DOMAIN}
      #secretName: letsencrypt

monitoring:
  # Deploy ServiceMonitor
  enabled: true
  # Metrics Scraping Interval
  interval: 15s
  # Create ConfigMap with Grafana Dashboards
  dashboards: true
  # Create PrometheusRule k8s object with alarm definitions
  alarms: false
  # Create rules with CRITICAL severity for Pager Duty integration.
  # `false` will change severity to HIGH (email notifications)
  pagerduty: true

services:
  auth:
    replicas: 1
  environment:
    replicas: 1
  auth_ui:
    replicas: 1

pod_autoscaler:
  auth:
    enabled: false
    metrics:
      - type: Resource
        resource:
          name: cpu
          target:
            type: Utilization
            averageUtilization: 350
  environment:
    enabled: false
    metrics:
      - type: Resource
        resource:
          name: cpu
          target:
            type: Utilization
            averageUtilization: 350

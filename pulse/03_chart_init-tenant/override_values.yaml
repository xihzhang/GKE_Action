# Default values for init-tenant.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# * Images
# Replace for your values: registry and secret
image:
  pullPolicy: IfNotPresent
  registry: "$IMAGE_REGISTRY"
  imagePullSecrets:
    - name: pullsecret

# * Tenant info
# Replace for your values
tenant:
  # Tenant UUID
  id: ${tenant_id}
  # Tenant SID (like 0001)
  sid: ${tenant_sid}

# common configuration.
config:
  dbName: "pulse"
  # set "true" when need @host added for username
  dbUserWithHost: false
  # set "true" for CSI secrets
  mountSecrets: false
  # Postgres config map name
  postgresConfig: "pulse-postgres-configmap"
  # Postgres secret name
  postgresSecret: "pulse-postgres-secret"
  # Postgres secret key for user
  postgresSecretUser: "META_DB_ADMIN"
  # Postgres secret key for password
  postgresSecretPassword: "META_DB_ADMINPWD"

configurator:
  enabled: true
  # set service domain used to access voice service
  voiceDomain: voice.svc.cluster.local
  # set service domain used to access ixn service
  ixnDomain: ixn.svc.cluster.local
  # set service domain used to access pulse service
  pulseDomain: pulse.svc.cluster.local
  # set configration server password, used when create secrets
  cfgUser: "default"
  # set configration server user, used when create secrets
  cfgPassword: "password"
  # common log configuration
  cfgHost: tenant-${tenant_id}.voice.svc.cluster.local
log:
  # log volume type: none | hostpath | pvc
  volumeType: none
## Service account settings
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

## Add annotations to all pods
##
podAnnotations: {}

## Specifies the security context for all Pods in the service
##
podSecurityContext:
  runAsNonRoot: true
  runAsUser: null
  runAsGroup: null
  fsGroup: null

securityContext:
  runAsUser:  null
  runAsGroup: null

## Resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  limits:
    memory: 256Mi
    cpu: 200m
  requests:
    memory: 128Mi
    cpu: 100m

## Priority Class
## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
##
priorityClassName: ""

## Node labels for assignment.
## ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

## Tolerations for assignment.
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

# * Templates
templates:
  - Agent_Group_Status.gpb
  - Agent_KPIs.gpb
  - Agent_Login.gpb
  - Alert_Widget.gpb
  - Callback_Activity.gpb
  - Campaign_Activity.gpb
  - Campaign_Callback_Status.gpb
  - Campaign_Group_Activity.gpb
  - Campaign_Group_Status.gpb
  - Chat_Agent_Activity.gpb
  - Chat_Queue_Activity.gpb
  - Chat_Service_Level_Performance.gpb
  - Chat_Waiting_Statistics.gpb
  - Email_Agent_Activity.gpb
  - Email_Queue_Activity.gpb
  - Facebook_Media_Activity.gpb
  - IFRAME.gpb
  - IWD_Agent_Activity.gpb
  - IWD_Queue_Activity.gpb
  - Queue_KPIs.gpb
  - Queue_Overflow_Reason.gpb
  - Static_Text.gpb
  - Twitter_Media_Activity.gpb
  - eServices_Agent_Activity.gpb
  - eServices_Queue_KPIs.gpb

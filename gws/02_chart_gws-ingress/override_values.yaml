deploymentGlobals:
  # Deployment tag, which is used as a suffix in names of Kubernetes objects created by the chart.
  # Value must be the same as in 'gws-services' chart.
  deploymentTag: blue
  # Specifies the default security context for all pods
  securityContext:
    # Whether a container must run as a non-root user
    runAsNonRoot: true
    # The UID to run the entrypoint of the container process
    runAsUser: 500
    # The GID to run the entrypoint of the container process
    runAsGroup: 500
    # A supplemental group ID that applies to all containers in a pod
    fsGroup: 500

imagePullSecrets:
  - name: pullsecret

gwsServiceProxy:
  deployment:
    # Amount of replicas
    replicaCount: 2

  image:
    # Docker registry address
    registry: "$IMAGE_REGISTRY/gws"
    # Name of docker registry repository
    repository: gws-system-nginx
    # Specifies whether chart will pull images
    pullPolicy: Always
    imagePullSecrets:
        - name: pullsecret

  context:
    env:
      # Consul port
      CONSUL_PORT: 8500
      # Whether consul enabled
      GWS_NGINX_CONSUL_ENABLED: off
      # Whether mapping enabled
      GWS_NGINX_ENABLE_MAPPING: false
      # Name of the consul service
      GWS_NGINX_CONSUL_SERVICE: system-nginx
      # Consul KV prefix
      GWS_CONSUL_KV_PREFIX: ""

  service:
    # HTTP Ports, used by service
    ports:
    - name: gws-service-proxy
      port: 80
      targetPort: 8080
    - name: gws-service-proxy-ext
      port: 81
      targetPort: 8081

entryPoints:
  internal:
    service:
      # Annotations for service
      annotations: {}

    ingress:
      # Whether ingress will start
      enabled: true
      # Ingress annotations
      annotations: {}
      # Paths to ingress relative to hostname
      paths: ["/"]
      # Host names
      hosts:
        - gws-int.${DOMAIN}
      # TLS configuration
      tls:
        - secretName: gws-secret-int
          hosts:
            - gws-int.${DOMAIN}


# For access outside K8s cluster
  external:
    ingress:
      # Whether ingress will start
      enabled: true
      # Ingress annotations
      annotations: {}
        #appgw.ingress.kubernetes.io/connection-draining: "true"
        #appgw.ingress.kubernetes.io/connection-draining-timeout: "30"
        #appgw.ingress.kubernetes.io/cookie-based-affinity: "true"
        #appgw.ingress.kubernetes.io/ssl-redirect: "false"
        #cert-manager.io/cluster-issuer: letsencrypt-prod
        #ingress.kubernetes.io/ssl-redirect: "false"
        #kubernetes.io/ingress.class: azure/application-gateway
      # Paths to ingress relative to hostname
      paths: ["/"]
      # Host names
      hosts:
        - gws.${DOMAIN}
      # TLS configuration
      tls:
        - secretName: gws-secret-ext
          hosts:
            - gws.${DOMAIN}
